Creating Tables
================

ADDING MYSQL TABLES TO PHP
===========================
Normally you create the tables for your application ahead of time either through a program like phpMyAdmin or by running a .sql file. However, there are times when you want to create them within your PHP program. If you do create tables in a PHP program, the MySQL user needs the structure privilege of CREATE. For this example, use your root user. Use the following steps:

1. Make a connection to the database.
2. Create a safe query with the command.
3. Run the query.

The following code uses the same MySQL command as in the previous section to create the table products3. You could just enclose the command in double quotes and assign it to the $query variable. It is not good practice to have extremely long lines and in practice you might need to add in PHP variables. You can use double quotes around appropriate sections of the command and put them back together with the concatenation operator (.). The query() method does only one statement at a time and does not use a semicolon at the end of the MySQL statement.

<?php
	define("MYSQLUSER", "root");
	define("MYSQLPASS", "p##V89Te5t");
	define("HOSTNAME", "localhost");
	define("MYSQLDB", "test");

	// Make connection to database
	$connection = @new mysqli(HOSTNAME, MYSQLUSER, MYSQLPASS, MYSQLDB);
	if ($connection->connect_error) {
		die('Connect Error: ' . $connection->connect_error);
	} else {
		echo 'Successful connection to MySQL <br />';
		// Create the MySQL command by copying the command and
		// splitting into shorter lines and concatenating with periods
		// Drop the final semicolon on the MySQL commmand
		// but don't forget the semicolon for ending the PHP command
		$query = "CREATE TABLE `test`.`products3` ( "
			. "`id` INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY , "
			. "`product` VARCHAR( 20 ) NOT NULL , "
			. "`description` TEXT NOT NULL , "
			. "`source` VARCHAR( 20 ) NULL DEFAULT 'External', "
			. "`date_created` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP"
			. ") ;
	// Run the query and display appropriate message
	if (!$result = $connection->query($query)) {
		echo "Unable to create table<br />";
	} else {
		echo "Table successfully created<br />";
	}
	// Show the tables
		if ($result = $connection->query("SHOW TABLES")) {
			$count = $result->num_rows;
			echo "Tables: ($count)<br />";
			while ($row =$result->fetch_array()) {
				echo $row[0]. '<br />';
			}
		}
	}



















